// @type

@use "sass:math" as math;

$float-amplitude: 15px;
$float-animation-duration: 8; // in seconds
$jitter: 15; // in pixels

.wrapper {
	--scale: 1;
	display: flex;
	flex-wrap: wrap;
	justify-content: center;
	padding-block: calc(#{$float-amplitude} + 1em) 1em;
	contain: content;
}
.iconWrapper {
	$half-jitter: math.div($jitter, 2) * 1px;
	position: relative;
	transform: translate(calc(var(--translate-x, 0px) - #{$half-jitter}), calc(var(--translate-y, 0px) - #{$half-jitter}));
	@for $i from 1 through 20 {
		&:nth-child(#{$i}) {
			--translate-x: calc(#{math.random($jitter)}px / var(--scale, 1));
			--translate-y: calc(#{math.random($jitter)}px / var(--scale, 1));
			.iconBox {
				animation-delay: -#{math.div(math.random($float-animation-duration * 10), 10)}s;
			}
		}
	}
}
.iconBox {
	display: flex;
	margin: 0.75rem;
	padding: 1.5em;
	border-radius: 12px;
	box-shadow: 0 12px 20px 6px rgb(104 112 118 / 0.08);
	background: hsl(var(--nextui-backgroundContrast));
	aspect-ratio: 1;
	animation: float #{$float-animation-duration}s ease-in-out infinite;
	img {
		object-fit: contain;
	}
}
.ttTitle {
	font-weight: bold;
}
@keyframes float {
	0% {
		transform: translateY(0px);
	}
	50% {
		transform: translateY(#{0px - $float-amplitude});
	}
	100% {
		transform: translateY(0px);
	}
}
html:global(.dark) .iconBox {
	box-shadow: none !important;
}
