// @type

@use "sass:math" as math;

$float-amplitude: 15px;
$float-animation-duration: 8; // in seconds
$jitter: 15; // in pixels

.wrapper {
	--scale: 1;
	display: flex;
	flex-wrap: wrap;
	justify-content: center;
	margin-block: 1rem;
	padding-top: $float-amplitude;
	contain: content;
}
.iconWrapper {
	$half-jitter: math.div($jitter, 2) * 1px;
	position: relative;
	translate: calc(var(--translate-x, 0px) - #{$half-jitter}) calc(var(--translate-y, 0px) - #{$half-jitter});
	@for $i from 1 through 20 {
		&:nth-child(#{$i}) {
			--translate-x: calc(#{random($jitter)}px / var(--scale, 1));
			--translate-y: calc(#{random($jitter)}px / var(--scale, 1));
			.iconBox {
				animation-delay: #{div(random($float-animation-duration * 10), 10)}s;
			}
		}
	}
}
.iconBox {
	display: flex;
	margin: 0.75rem;
	padding: 1.5em;
	border-radius: var(--nextui-radii-md, 12px);
	box-shadow: none;
	background: var(--nextui-colors-backgroundContrast);
	animation: float #{$float-animation-duration}s ease-in-out infinite;
	img {
		object-fit: contain;
	}
}
@keyframes float {
	0% {
		box-shadow: 0 5px 8px 0px rgb(104 112 118 / 0.16);
		translate: 0 0px;
	}
	50% {
		box-shadow: 0 #{5px + $float-amplitude} 15px 0px rgb(104 112 118 / 0.06);
		translate: 0 #{0px - $float-amplitude};
	}
	100% {
		box-shadow: 0 5px 8px 0px rgb(104 112 118 / 0.16);
		translate: 0 0px;
	}
}
html:global(.dark-theme) .iconBox {
	box-shadow: none !important;
}
